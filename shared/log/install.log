2017:04:26 23:49:12 -------------------------------------------
2017:04:26 23:49:12 Creating workspace workflow
2017:04:26 23:49:12 Connected to server 127.0.0.1 :3306  using user: 'processUser'
2017:04:26 23:49:12 DROP DATABASE IF EXISTS wf_workflow;
2017:04:26 23:49:40 CREATE DATABASE IF NOT EXISTS wf_workflow;
2017:04:26 23:49:40 GRANT ALL PRIVILEGES ON `wf_workflow`.* TO wf_59016a549cd6e@'localhost' IDENTIFIED BY '=fva1Cpe&93xP5Z' WITH GRANT OPTION
2017:04:26 23:49:40 GRANT ALL PRIVILEGES ON `wf_workflow`.* TO wf_59016a549cd6e@'localhost' IDENTIFIED BY '=fva1Cpe&93xP5Z' WITH GRANT OPTION
2017:04:26 23:49:40 GRANT ALL PRIVILEGES ON `wf_workflow`.* TO wf_59016a549cd6e@'localhost' IDENTIFIED BY '=fva1Cpe&93xP5Z' WITH GRANT OPTION
2017:04:26 23:49:40 Creating : D:/xampp/htdocs/processmaker/shared//sites/workflow/db.php
2017:04:26 23:49:40 Creating : D:/xampp/htdocs/processmaker/shared//sites/workflow/databases.php
2017:04:26 23:49:40 USE wf_workflow;
2017:04:26 23:49:40 Processing: D:/xampp/htdocs/processmaker/rbac/engine/data/mysql/schema.sql
2017:04:26 23:49:42 File: schema.sql processed in 1.411080121994 seconds
2017:04:26 23:49:42 Processing: D:/xampp/htdocs/processmaker/rbac/engine/data/mysql/insert.sql
2017:04:26 23:49:42 File: insert.sql processed in 0.37302088737488 seconds
2017:04:26 23:49:42 USE wf_workflow;
2017:04:26 23:49:42 Processing: D:/xampp/htdocs/processmaker/workflow/engine/data/mysql/schema.sql
2017:04:26 23:50:15 File: schema.sql processed in 32.907882213593 seconds
2017:04:26 23:50:15 Processing: D:/xampp/htdocs/processmaker/workflow/engine/data/mysql/insert.sql
2017:04:26 23:50:45 File: insert.sql processed in 30.181726932526 seconds
2017:04:26 23:50:45 CREATE TRIGGER APP_DELEGATION_INSERT BEFORE INSERT ON APP_DELEGATION
FOR EACH ROW
BEGIN
  DECLARE DEFAULT_LANG VARCHAR(2);
  DECLARE APP_NUMBER INT;
  DECLARE APP_STATUS VARCHAR(32);
  DECLARE APP_CREATE_DATE DATETIME;
  DECLARE APP_UPDATE_DATE DATETIME;
  DECLARE APP_TITLE VARCHAR(255);
  DECLARE APP_PRO_TITLE VARCHAR(255);
  DECLARE APP_TAS_TITLE VARCHAR(255);
  DECLARE APP_CURRENT_USER VARCHAR(255);
  DECLARE PREVIOUS_USR_UID VARCHAR(32);
  DECLARE APP_DEL_PREVIOUS_USER VARCHAR(255);
  DECLARE APP_THREAD_STATUS VARCHAR(32);
  SET @DEFAULT_LANG = '{lang}';
  SET @APP_CURRENT_USER = '';
  SELECT APPLICATION.APP_NUMBER into @APP_NUMBER FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;
  SELECT APPLICATION.APP_STATUS into @APP_STATUS FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;
  SELECT APPLICATION.APP_CREATE_DATE into @APP_CREATE_DATE FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;
  SELECT APPLICATION.APP_UPDATE_DATE into @APP_UPDATE_DATE FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;

  SELECT APPLICATION.APP_TITLE into @APP_TITLE FROM APPLICATION WHERE NEW.APP_UID=APPLICATION.APP_UID LIMIT 1;
  IF ( @APP_TITLE IS NULL ) THEN
    SET @APP_TITLE = '';
  END IF;
  SELECT PROCESS.PRO_TITLE into @APP_PRO_TITLE FROM PROCESS WHERE NEW.PRO_UID=PROCESS.PRO_UID LIMIT 1;
  SELECT TASK.TAS_TITLE into @APP_TAS_TITLE FROM TASK WHERE NEW.TAS_UID=TASK.TAS_UID LIMIT 1;
  SELECT CONCAT(USERS.USR_LASTNAME,  ' ',  USERS.USR_FIRSTNAME) INTO @APP_CURRENT_USER FROM USERS WHERE USR_UID = NEW.USR_UID LIMIT 1;
  IF ( @APP_CURRENT_USER IS NULL ) THEN
    SET @APP_CURRENT_USER = '';
  END IF;
  IF ( NEW.DEL_PREVIOUS > 0 ) THEN
    SELECT USR_UID INTO @PREVIOUS_USR_UID FROM APP_DELEGATION WHERE APP_UID = NEW.APP_UID AND DEL_INDEX = NEW.DEL_PREVIOUS LIMIT 1;
    SELECT CONCAT(USERS.USR_LASTNAME,  ' ',  USERS.USR_FIRSTNAME) INTO @APP_DEL_PREVIOUS_USER FROM USERS WHERE USR_UID = @PREVIOUS_USR_UID LIMIT 1;
    IF ( @APP_DEL_PREVIOUS_USER IS NULL ) THEN
      SET @APP_DEL_PREVIOUS_USER = '';
    END IF;
  ELSE
    SET @APP_DEL_PREVIOUS_USER = '';
    SET @PREVIOUS_USR_UID = '';
  END IF;
  SELECT APP_THREAD_STATUS INTO @APP_THREAD_STATUS FROM APP_THREAD WHERE APP_UID = NEW.APP_UID AND DEL_INDEX = NEW.DEL_PREVIOUS LIMIT 1;
  IF ( @APP_THREAD_STATUS IS NULL ) THEN
    SET @APP_THREAD_STATUS = 'OPEN';
  END IF;
  SET @TAS_TYPE = (SELECT TAS_TYPE FROM TASK WHERE TAS_UID = NEW.TAS_UID LIMIT 1);
  UPDATE APP_CACHE_VIEW SET DEL_LAST_INDEX = 0 WHERE APP_UID = NEW.APP_UID;
    INSERT INTO `APP_CACHE_VIEW`  (
    APP_UID,
    DEL_INDEX,
    APP_NUMBER,
    APP_STATUS,
    USR_UID,
    PREVIOUS_USR_UID,
    TAS_UID,
    PRO_UID,
    DEL_DELEGATE_DATE,
    DEL_INIT_DATE,
    DEL_FINISH_DATE,
    DEL_TASK_DUE_DATE,
    DEL_RISK_DATE,
    DEL_THREAD_STATUS,
    APP_THREAD_STATUS,
    APP_TITLE,
    APP_PRO_TITLE,
    APP_TAS_TITLE,
    APP_CURRENT_USER,
    APP_DEL_PREVIOUS_USER,
    DEL_PRIORITY,
    DEL_DURATION,
    DEL_QUEUE_DURATION,
    DEL_DELAY_DURATION,
    DEL_STARTED,
    DEL_FINISHED,
    DEL_DELAYED,
    APP_CREATE_DATE,
    APP_FINISH_DATE,
    APP_UPDATE_DATE,
    APP_OVERDUE_PERCENTAGE,
    DEL_LAST_INDEX
  )
  VALUES (
    NEW.APP_UID,
    NEW.DEL_INDEX,
    @APP_NUMBER,
    @APP_STATUS,
    NEW.USR_UID,
    @PREVIOUS_USR_UID,
    NEW.TAS_UID,
    NEW.PRO_UID,
    NEW.DEL_DELEGATE_DATE,
    NEW.DEL_INIT_DATE,
    NEW.DEL_FINISH_DATE,
    NEW.DEL_TASK_DUE_DATE,
    NEW.DEL_RISK_DATE,
    NEW.DEL_THREAD_STATUS,
    @APP_THREAD_STATUS,
    @APP_TITLE,
    @APP_PRO_TITLE,
    @APP_TAS_TITLE,
    @APP_CURRENT_USER,
    @APP_DEL_PREVIOUS_USER,
    NEW.DEL_PRIORITY,
    NEW.DEL_DURATION,
    NEW.DEL_QUEUE_DURATION,
    NEW.DEL_DELAY_DURATION,
    NEW.DEL_STARTED,
    NEW.DEL_FINISHED,
    NEW.DEL_DELAYED,
    @APP_CREATE_DATE,
    NULL,
    @APP_UPDATE_DATE,
    NEW.APP_OVERDUE_PERCENTAGE,
    NEW.DEL_LAST_INDEX
  );
END
2017:04:26 23:50:45 CREATE TRIGGER APP_DELEGATION_UPDATE BEFORE UPDATE ON APP_DELEGATION
FOR EACH ROW
BEGIN
  DECLARE DEFAULT_LANG VARCHAR(2);
  DECLARE APP_NUMBER INT;
  DECLARE APP_STATUS VARCHAR(32);
  DECLARE APP_CREATE_DATE DATETIME;
  DECLARE APP_UPDATE_DATE DATETIME;
  DECLARE APP_TITLE VARCHAR(255);
  DECLARE APP_PRO_TITLE VARCHAR(255);
  DECLARE APP_TAS_TITLE VARCHAR(255);
  DECLARE APP_CURRENT_USER VARCHAR(255);
  DECLARE PREVIOUS_USR_UID VARCHAR(32);
  DECLARE APP_DEL_PREVIOUS_USER VARCHAR(255);
  DECLARE APP_THREAD_STATUS VARCHAR(32);
  SET @DEFAULT_LANG = '{lang}';
  SET @APP_CURRENT_USER = '';
  SELECT APPLICATION.APP_NUMBER into @APP_NUMBER FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;
  SELECT APPLICATION.APP_STATUS into @APP_STATUS FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;
  SELECT APPLICATION.APP_CREATE_DATE into @APP_CREATE_DATE FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;
  SELECT APPLICATION.APP_UPDATE_DATE into @APP_UPDATE_DATE FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;

  SELECT APPLICATION.APP_TITLE into @APP_TITLE FROM APPLICATION WHERE NEW.APP_UID=APPLICATION.APP_UID LIMIT 1;
  IF ( @APP_TITLE IS NULL ) THEN
    SET @APP_TITLE = '';
  END IF;
  SELECT PROCESS.PRO_TITLE into @APP_PRO_TITLE FROM PROCESS WHERE NEW.PRO_UID=PROCESS.PRO_UID LIMIT 1;
  SELECT TASK.TAS_TITLE into @APP_TAS_TITLE FROM TASK WHERE NEW.TAS_UID=TASK.TAS_UID LIMIT 1;
  SELECT CONCAT(USERS.USR_LASTNAME,  ' ',  USERS.USR_FIRSTNAME) INTO @APP_CURRENT_USER FROM USERS WHERE USR_UID = NEW.USR_UID LIMIT 1;
  IF ( @APP_CURRENT_USER IS NULL ) THEN
    SET @APP_CURRENT_USER = '';
  END IF;
  IF ( NEW.DEL_PREVIOUS > 0 ) THEN
    SELECT USR_UID INTO @PREVIOUS_USR_UID FROM APP_DELEGATION WHERE APP_UID = NEW.APP_UID AND DEL_INDEX = NEW.DEL_PREVIOUS LIMIT 1;
    SELECT CONCAT(USERS.USR_LASTNAME,  ' ',  USERS.USR_FIRSTNAME) INTO @APP_DEL_PREVIOUS_USER FROM USERS WHERE USR_UID = @PREVIOUS_USR_UID LIMIT 1;
    IF ( @APP_DEL_PREVIOUS_USER IS NULL ) THEN
      SET @APP_DEL_PREVIOUS_USER = '';
    END IF;
  ELSE
    SET @APP_DEL_PREVIOUS_USER = '';
    SET @PREVIOUS_USR_UID = '';
  END IF;
  SELECT APP_THREAD_STATUS INTO @APP_THREAD_STATUS FROM APP_THREAD WHERE APP_UID = NEW.APP_UID AND DEL_INDEX = NEW.DEL_PREVIOUS LIMIT 1;
  IF ( @APP_THREAD_STATUS IS NULL ) THEN
    SET @APP_THREAD_STATUS = 'OPEN';
  END IF;
  SET @TAS_TYPE = (SELECT TAS_TYPE FROM TASK WHERE TAS_UID = NEW.TAS_UID LIMIT 1);
    UPDATE `APP_CACHE_VIEW`
    SET
    APP_NUMBER            =   @APP_NUMBER,
    APP_STATUS            =   @APP_STATUS,
    USR_UID               =   NEW.USR_UID,
    PREVIOUS_USR_UID      =   @PREVIOUS_USR_UID,
    TAS_UID               =   NEW.TAS_UID,
    PRO_UID               =   NEW.PRO_UID,
    DEL_DELEGATE_DATE     =   NEW.DEL_DELEGATE_DATE,
    DEL_INIT_DATE         =   NEW.DEL_INIT_DATE,
    DEL_FINISH_DATE       =   NEW.DEL_FINISH_DATE,
    DEL_TASK_DUE_DATE     =   NEW.DEL_TASK_DUE_DATE,
    DEL_RISK_DATE         =   NEW.DEL_RISK_DATE,
    DEL_THREAD_STATUS     =   NEW.DEL_THREAD_STATUS,
    APP_THREAD_STATUS     =   @APP_THREAD_STATUS,
    APP_TITLE             =   @APP_TITLE,
    APP_PRO_TITLE         =   @APP_PRO_TITLE,
    APP_TAS_TITLE         =   @APP_TAS_TITLE,
    APP_CURRENT_USER      =   @APP_CURRENT_USER,
    APP_DEL_PREVIOUS_USER =   @APP_DEL_PREVIOUS_USER,
    DEL_PRIORITY          =   NEW.DEL_PRIORITY,
    DEL_DURATION          =   NEW.DEL_DURATION,
    DEL_QUEUE_DURATION    =   NEW.DEL_QUEUE_DURATION,
    DEL_DELAY_DURATION    =   NEW.DEL_DELAY_DURATION,
    DEL_STARTED           =   NEW.DEL_STARTED,
    DEL_FINISHED          =   NEW.DEL_FINISHED,
    DEL_DELAYED           =   NEW.DEL_DELAYED,
    APP_FINISH_DATE       =   NULL,
    APP_UPDATE_DATE        =  @APP_UPDATE_DATE,
    APP_OVERDUE_PERCENTAGE =  NEW.APP_OVERDUE_PERCENTAGE,
    DEL_LAST_INDEX        =   NEW.DEL_LAST_INDEX
  WHERE
    APP_UID = NEW.APP_UID
    AND DEL_INDEX =   NEW.DEL_INDEX;
END
2017:04:26 23:50:45 CREATE TRIGGER APPLICATION_UPDATE BEFORE UPDATE ON APPLICATION

FOR EACH ROW

BEGIN
  DECLARE APP_STATUS VARCHAR(32);
  DECLARE APP_FINISH_DATE DATETIME;

  SELECT APPLICATION.APP_STATUS into @APP_STATUS FROM APPLICATION WHERE APP_UID = NEW.APP_UID LIMIT 1;

  IF(OLD.APP_STATUS<>NEW.APP_STATUS) THEN
    SET @APP_STATUS = NEW.APP_STATUS;
    UPDATE APP_CACHE_VIEW SET APP_STATUS = @APP_STATUS WHERE APP_UID = NEW.APP_UID;
  END IF;

  IF(OLD.APP_DATA<>NEW.APP_DATA) THEN
      UPDATE APP_CACHE_VIEW SET APP_UPDATE_DATE = NEW.APP_UPDATE_DATE WHERE APP_UID = NEW.APP_UID;
  END IF;

  IF (NEW.APP_STATUS = 'COMPLETED') THEN
      UPDATE APP_CACHE_VIEW SET APP_FINISH_DATE = NEW.APP_FINISH_DATE WHERE APP_UID = NEW.APP_UID;
      UPDATE APP_CACHE_VIEW SET APP_UPDATE_DATE = NEW.APP_UPDATE_DATE WHERE APP_UID = NEW.APP_UID;
  END IF;
END
2017:04:26 23:50:46 CREATE TRIGGER APPLICATION_DELETE BEFORE DELETE ON APPLICATION
 FOR EACH ROW BEGIN
  DELETE FROM APP_CACHE_VIEW WHERE APP_UID = OLD.APP_UID; 
END
2017:04:26 23:50:46 CREATE TRIGGER SUB_APPLICATION_INSERT BEFORE INSERT ON SUB_APPLICATION
FOR EACH ROW
BEGIN
    DECLARE PREVIOUS_USR_UID VARCHAR(32);

    SET @PREVIOUS_USR_UID = '';

    SET @PREVIOUS_USR_UID = (
        SELECT APPDEL2.USR_UID
        FROM   APP_DELEGATION AS APPDEL1, APP_DELEGATION AS APPDEL2
        WHERE  APPDEL1.APP_UID = NEW.APP_PARENT AND APPDEL1.DEL_INDEX = NEW.DEL_INDEX_PARENT AND
               APPDEL1.APP_UID = APPDEL2.APP_UID AND APPDEL1.DEL_PREVIOUS = APPDEL2.DEL_INDEX
        LIMIT 1
    );

    IF (@PREVIOUS_USR_UID IS NULL) THEN
        SET @PREVIOUS_USR_UID = '';
    END IF;

    -- Update record in APP_CACHE_VIEW
    UPDATE APP_CACHE_VIEW
    SET    PREVIOUS_USR_UID = @PREVIOUS_USR_UID
    WHERE  APP_UID = NEW.APP_UID AND DEL_INDEX = (SELECT APPDEL.DEL_INDEX
                                                  FROM   APP_DELEGATION AS APPDEL
                                                  WHERE  APPDEL.APP_UID = NEW.APP_UID AND APPDEL.DEL_PREVIOUS = 0
                                                  LIMIT 1
                                                 );

END
2017:04:26 23:50:46 CREATE TRIGGER CONTENT_UPDATE BEFORE UPDATE ON CONTENT

FOR EACH ROW
BEGIN

  DECLARE str TEXT;
  
  IF (NEW.CON_VALUE IS NULL) THEN
    SET str = '';
  ELSE
    SET str = NEW.CON_VALUE;
  END IF;
  
  CASE (NEW.CON_CATEGORY)
    WHEN 'APP_TITLE' THEN
      BEGIN
        UPDATE APP_CACHE_VIEW
        SET    APP_TITLE = str
        WHERE  APP_UID = NEW.CON_ID;
      END;
    
    WHEN 'PRO_TITLE' THEN
      BEGIN
        UPDATE APP_CACHE_VIEW
        SET    APP_PRO_TITLE = str
        WHERE  PRO_UID = NEW.CON_ID;
      END;
      
    WHEN 'TAS_TITLE' THEN
      BEGIN
        UPDATE APP_CACHE_VIEW
        SET    APP_TAS_TITLE = str
        WHERE  TAS_UID = NEW.CON_ID;
      END;
    
    ELSE
      BEGIN
      END;
  END CASE;
  
END;
2017:04:26 23:50:46 INSERT INTO `CONFIGURATION` (
                            `CFG_UID`,
                            `CFG_VALUE`
                           )
                           VALUES (
                             'APP_CACHE_VIEW_ENGINE',
                             'a:2:{s:4:\"LANG\";s:2:\"en\";s:6:\"STATUS\";s:6:\"active\";}'
                           )
2017:04:26 23:50:46 INSERT INTO EMAIL_SERVER(MESS_UID, MESS_ENGINE) VALUES('20959472659016a9661f176020534121', 'MAIL')
2017:04:26 23:50:46 USE wf_workflow;
2017:04:26 23:50:46 UPDATE USERS SET USR_USERNAME = 'admin', USR_LASTNAME = 'admin', USR_PASSWORD = '37dc53f9996b03c2bee24890fd915ef86902d897c9d0b78a1c1a159a1b8d1bd6' WHERE USR_UID = '00000000000000000000000000000001'
2017:04:26 23:50:46 UPDATE RBAC_USERS SET USR_USERNAME = 'admin', USR_LASTNAME = 'admin', USR_PASSWORD = '37dc53f9996b03c2bee24890fd915ef86902d897c9d0b78a1c1a159a1b8d1bd6' WHERE USR_UID = '00000000000000000000000000000001'
2017:04:26 23:50:46 Creating : D:/xampp/htdocs/processmaker/workflow/engine/config/paths_installed.php
2017:04:26 23:50:48 USE wf_workflow;
2017:04:26 23:50:48 INSERT INTO OAUTH_CLIENTS (CLIENT_ID,CLIENT_SECRET,CLIENT_NAME,CLIENT_DESCRIPTION,CLIENT_WEBSITE,REDIRECT_URI,USR_UID ) VALUES
                ('x-pm-local-client','179ad45c6ce2cb97cf1029e212046e81','PM Web Designer','ProcessMaker Web Designer App','www.processmaker.com','http://processmakers.com/sysworkflow/en/neoclassic/oauth2/grant','00000000000000000000000000000001' )
2017:04:26 23:50:48 Index File updated 1 with lang: {en}, skin: {neoclassic}
2017:04:26 23:50:48 Installation completed successfully.
